// <auto-generated />
using System;
using Contact.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Contact.Infrastructure.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20221024115559_rd")]
    partial class rd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Contact.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("location");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<Guid>("userid")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("id")
                        .HasName("pk_contact");

                    b.HasIndex("id")
                        .IsUnique()
                        .HasDatabaseName("ix_contact_id");

                    b.HasIndex("userid")
                        .HasDatabaseName("ix_contact_userid");

                    b.ToTable("contact", "public");
                });

            modelBuilder.Entity("Contact.Domain.Entities.LocationStatusReport", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("report")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("report");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("id")
                        .HasName("pk_locationreport");

                    b.ToTable("locationreport", "public");
                });

            modelBuilder.Entity("Contact.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("company")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("company");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.HasKey("id")
                        .HasName("pk_user");

                    b.HasIndex("id")
                        .IsUnique()
                        .HasDatabaseName("ix_user_id");

                    b.ToTable("user", "public");
                });

            modelBuilder.Entity("Contact.Domain.Entities.Contact", b =>
                {
                    b.HasOne("Contact.Domain.Entities.User", "user")
                        .WithMany("contacts")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_contact_user_userid");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Contact.Domain.Entities.User", b =>
                {
                    b.Navigation("contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
